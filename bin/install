#!/usr/bin/env bash

set -euo pipefail

current_script_path="${BASH_SOURCE[0]}"
plugin_dir="$(dirname "$(dirname "$current_script_path")")"

# shellcheck source=../lib/utils.bash
source "${plugin_dir}/lib/utils.bash"

function install_firebase() {
	# if not asdf version with asdf_download_path then call download script here
	if [ -z "${ASDF_DOWNLOAD_PATH:-}" ]; then
		tmp_download_dir=$(mktemp -d -t 'asdf_firebase_XXXXXX')
		trap 'rm -rf "${tmp_download_dir}"' EXIT
		log_info "‚ÑπÔ∏è  run download script for older version of asdf"
		export ASDF_DOWNLOAD_PATH="${tmp_download_dir}"

		# download
		bash "$(dirname "$0")/download"
	fi

	log_info "üöß  installing..."
	# move executable
	mkdir -p "${ASDF_INSTALL_PATH}/bin"
	cp "${ASDF_DOWNLOAD_PATH}/firebase" "${ASDF_INSTALL_PATH}/bin"
	chmod +rx "${ASDF_INSTALL_PATH}/bin/firebase"
	# test executable
	test -x "${ASDF_INSTALL_PATH}/bin/firebase" || log_failure_and_exit "Expected ${ASDF_INSTALL_PATH}/bin/firebase to be executable."
	log_success "firebase-tools ${ASDF_INSTALL_VERSION} installed!"
}

if [ "${ASDF_INSTALL_TYPE}" != "version" ]; then
	log_failure_and_exit "Please provide the firebase-tools version number you wish to install."
fi

check_dependencies "$(dirname "$0")/../lib/dependencies.txt" "failure"

install_firebase
